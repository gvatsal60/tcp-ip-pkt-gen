# Use Alpine Linux as the base image
FROM alpine:3.22 AS base

# Metadata indicating the maintainer of this Dockerfile
LABEL MAINTAINER="gvatsal60"
# Description of the purpose of this image
LABEL DESCRIPTION="Build Environment"

# Update and install necessary packages
RUN apk update && \
  apk upgrade && \
  # Install necessary tools
  apk add --no-cache \
  build-base \
  clang \
  cmake \
  git \
  net-tools \
  openssl \
  openssl-dev \
  python3 \
  xz \
  && rm -rf /var/cache/apk/* \
  # Create a non-root user
  && adduser -D nonroot

# Install gtest from source
FROM base AS gtest
ARG GTEST_VER=1.17.0
ARG GTEST_TAR_VER=v${GTEST_VER}.tar.gz
ARG GTEST_BUILD_DIR=googletest-${GTEST_VER}/build
ARG GTEST_SRC=/usr/local/src
ARG GTEST_DEST=/opt/gtest

# Download and extract gtest source code using ADD
ADD https://github.com/google/googletest/archive/${GTEST_TAR_VER} ${GTEST_SRC}

# Extract gtest source code, build directory, compile, and install gtest
RUN set -x \
  # && tar -xzvf ${GTEST_SRC}/${GTEST_TAR_VER} -C ${GTEST_SRC} \
  && mkdir -p ${GTEST_SRC}/${GTEST_BUILD_DIR} \
  && cd ${GTEST_SRC}/${GTEST_BUILD_DIR} \
  && cmake \
  && make -j$(nproc) \
  && make install DESTDIR=${GTEST_DEST} \
  && rm -rf ${GTEST_SRC}/${GTEST_VER}

# Build Final Image
FROM base AS build

# Copy gtest binaries from the gtest stage
COPY --from=gtest ${GTEST_DEST} /

# Set environment variables for locale
ENV LC_ALL=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8

# Copy non-root user from base image
COPY --from=base /etc/passwd /etc/passwd
COPY --from=base /etc/group /etc/group

# Switch to non-root user
USER nonroot

# Set default shell
CMD ["/bin/ash"]

# Define the default command to run when the container starts
ENTRYPOINT ["/bin/ash", "-c"]
